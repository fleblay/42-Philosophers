!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
$(NAME)	Makefile	/^$(NAME)	: $(OBJS_LIST) $(HEADER)$/;"	t
$(OBJS_DIR)	Makefile	/^$(OBJS_DIR)	:$/;"	t
$(OBJS_DIR)/%.o	Makefile	/^$(OBJS_DIR)\/%.o	: $(SRCS_DIR)\/%.c $(HEADER) | $(OBJS_DIR)$/;"	t
ALL	philo.h	/^# define ALL /;"	d
CC	Makefile	/^CC			= gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS		= -Wall -Wextra -Werror -g3 -fsanitize=thread$/;"	m
DEAD	philo.h	/^# define DEAD /;"	d
DEBUG	philo.h	/^#  define DEBUG /;"	d
FORK_TAB	philo.h	/^# define FORK_TAB /;"	d
HEADER	Makefile	/^HEADER		= $(addprefix $(HEADER_DIR)\/, $(HEADER_LIST))$/;"	m
HEADER_DIR	Makefile	/^HEADER_DIR	= .$/;"	m
HEADER_LIST	Makefile	/^HEADER_LIST	= philo.h$/;"	m
NAME	Makefile	/^NAME		= philo$/;"	m
OBJS_DIR	Makefile	/^OBJS_DIR	= .\/obj$/;"	m
OBJS_LIST	Makefile	/^OBJS_LIST	= $(patsubst $(SRCS_DIR)%.c, $(OBJS_DIR)%.o, $(SRCS))$/;"	m
PHILO_H	philo.h	/^# define PHILO_H$/;"	d
PRINT	philo.h	/^# define PRINT /;"	d
SRCS	Makefile	/^SRCS		= $(addprefix $(SRCS_DIR)\/, $(SRCS_LIST))$/;"	m
SRCS_DIR	Makefile	/^SRCS_DIR	= .$/;"	m
SRCS_LIST	Makefile	/^SRCS_LIST	= philo.c ft_satoi.c ft_putstr_fd.c init_data.c destroy_data.c\\$/;"	m
START	philo.h	/^# define START /;"	d
TIME	philo.h	/^# define TIME /;"	d
all	Makefile	/^all	: $(NAME)$/;"	t
clean	Makefile	/^clean	:$/;"	t
current_time	philo.h	/^	unsigned long	current_time;$/;"	m	struct:s_philo	typeref:typename:unsigned long
data	philo.h	/^	t_data			*data;$/;"	m	struct:s_philo	typeref:typename:t_data *
dead	philo.h	/^	int				dead;$/;"	m	struct:s_philo	typeref:typename:int
dead_philo	philo.h	/^	int				dead_philo;$/;"	m	struct:s_data	typeref:typename:int
debug	Makefile	/^debug : $(NAME)$/;"	t
fclean	Makefile	/^fclean	: clean$/;"	t
fork_available	philo.h	/^	int				*fork_available;$/;"	m	struct:s_data	typeref:typename:int *
ft_allocate	init_data.c	/^static int	ft_allocate(t_data *data)$/;"	f	typeref:typename:int	file:
ft_deallocate	destroy_data.c	/^void	ft_deallocate(t_data *data)$/;"	f	typeref:typename:void
ft_get_param	init_data.c	/^static int	ft_get_param(t_data *data, int ac, char *av[])$/;"	f	typeref:typename:int	file:
ft_get_time	time_utils.c	/^unsigned long	ft_get_time(void)$/;"	f	typeref:typename:unsigned long
ft_init_data	init_data.c	/^int	ft_init_data(t_data *data, int ac, char *av[])$/;"	f	typeref:typename:int
ft_isdigit	ft_satoi.c	/^static int	ft_isdigit(int c)$/;"	f	typeref:typename:int	file:
ft_isspace	ft_satoi.c	/^static int	ft_isspace(int c)$/;"	f	typeref:typename:int	file:
ft_join_philo	launch_philo.c	/^void	ft_join_philo(t_data *data)$/;"	f	typeref:typename:void
ft_launch_philo	launch_philo.c	/^int	ft_launch_philo(t_data *data)$/;"	f	typeref:typename:int
ft_launch_threads	launch_philo.c	/^static int	ft_launch_threads(t_data *data)$/;"	f	typeref:typename:int	file:
ft_mutex_destroy	destroy_data.c	/^void	ft_mutex_destroy(t_data *data, int flags)$/;"	f	typeref:typename:void
ft_mutex_init	init_data.c	/^static int	ft_mutex_init(t_data *data)$/;"	f	typeref:typename:int	file:
ft_putstr_fd	ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_satoi	ft_satoi.c	/^long	ft_satoi(const char *nptr, int *error)$/;"	f	typeref:typename:long
ft_set_data	init_data.c	/^static void	ft_set_data(t_data *data)$/;"	f	typeref:typename:void	file:
ft_set_philo	launch_philo.c	/^static void	ft_set_philo(t_data *data, t_philo *philo, int i)$/;"	f	typeref:typename:void	file:
id	philo.h	/^	int				id;$/;"	m	struct:s_philo	typeref:typename:int
left_fork	philo.h	/^	unsigned int	left_fork;$/;"	m	struct:s_philo	typeref:typename:unsigned int
m_dead	philo.h	/^	pthread_mutex_t	m_dead;$/;"	m	struct:s_data	typeref:typename:pthread_mutex_t
m_fork	philo.h	/^	pthread_mutex_t	*m_fork;$/;"	m	struct:s_data	typeref:typename:pthread_mutex_t *
m_print	philo.h	/^	pthread_mutex_t	m_print;$/;"	m	struct:s_data	typeref:typename:pthread_mutex_t
m_start	philo.h	/^	pthread_mutex_t	m_start;$/;"	m	struct:s_data	typeref:typename:pthread_mutex_t
m_time	philo.h	/^	pthread_mutex_t	m_time;$/;"	m	struct:s_data	typeref:typename:pthread_mutex_t
main	philo.c	/^int	main(int ac, char *av[])$/;"	f	typeref:typename:int
meal_goal	philo.h	/^	int				meal_goal;$/;"	m	struct:s_data	typeref:typename:int
meal_goal	philo.h	/^	int				meal_goal;$/;"	m	struct:s_philo	typeref:typename:int
philo	philo.h	/^	struct s_philo	*philo;$/;"	m	struct:s_data	typeref:struct:s_philo *
philo_count	philo.h	/^	int				philo_count;$/;"	m	struct:s_data	typeref:typename:int
philo_count	philo.h	/^	int				philo_count;$/;"	m	struct:s_philo	typeref:typename:int
philo_routine	philo_routine.c	/^void	*philo_routine(void *philo_struct)$/;"	f	typeref:typename:void *
re	Makefile	/^re	: fclean all$/;"	t
right_fork	philo.h	/^	unsigned int	right_fork;$/;"	m	struct:s_philo	typeref:typename:unsigned int
s_data	philo.h	/^typedef struct s_data {$/;"	s
s_philo	philo.h	/^typedef struct s_philo {$/;"	s
start_time	philo.h	/^	unsigned long	start_time;$/;"	m	struct:s_data	typeref:typename:unsigned long
start_time	philo.h	/^	unsigned long	start_time;$/;"	m	struct:s_philo	typeref:typename:unsigned long
t_data	philo.h	/^}	t_data;	$/;"	t	typeref:struct:s_data
t_philo	philo.h	/^}	t_philo;$/;"	t	typeref:struct:s_philo
thread	philo.h	/^	pthread_t		*thread;$/;"	m	struct:s_data	typeref:typename:pthread_t *
ttd	philo.h	/^	unsigned long	ttd;$/;"	m	struct:s_data	typeref:typename:unsigned long
ttd	philo.h	/^	unsigned long	ttd;$/;"	m	struct:s_philo	typeref:typename:unsigned long
tte	philo.h	/^	unsigned long	tte;$/;"	m	struct:s_data	typeref:typename:unsigned long
tte	philo.h	/^	unsigned long	tte;$/;"	m	struct:s_philo	typeref:typename:unsigned long
tts	philo.h	/^	unsigned long	tts;$/;"	m	struct:s_data	typeref:typename:unsigned long
tts	philo.h	/^	unsigned long	tts;$/;"	m	struct:s_philo	typeref:typename:unsigned long
